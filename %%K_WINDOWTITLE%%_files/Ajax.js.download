/*-----------------------------------------------------------------------------
This source is part of the FLEXCUBE@ Java App Server Software System and is
copyrighted by i-flex Solutions Limited.

All rights reserved.  No part of this work may be reproduced, stored in a
retrieval system, adopted or transmitted in any form or by any means,
electronic, mechanical, photographic, graphic, optic recording or otherwise,
translated in any language or computer language, without the prior written
permission of i-flex Solutions Limited.

i-flex Solutions Limited.
10-11, SDF I, SEEPZ, Andheri (East),
Mumbai - 400 096.
India

Copyright 2004 i-flex Solutions Limited.

Modification History

Date			Version		Author			Description
__________	___________	_______________ ________________________________________
11/08/2008	1			Saroj K Nayak		Initial Version	
11/04/2009	2			Saroj K Nayak		Added call back functions for response, 
											error and warnings
28/05/2009	3			Mahesh Phadke		Modified displayAjaxStatusMessage() to add
											resultmsg in messageFrame.
03/06/2009	4			Saroj K Nayak		Modified  disableDocument and enableDocument
											to disable only fresh setof elements
10 06 2009	5			Mahesh Phadke		Fixed the browser compatibility issues.
02 06 2010	6			Mahesh Phadke		Removed the overloaded methods of SendAjaxRequest and 
											sent back request object to the response handlers.
27/06/2010	7			Saroj K Nayak		Modified to call displayAjaxStatusMessage
------------------------------------------------------------------------------*/
function SendAjaxRequest(p_reqstr,p_reqid){
	var l_str = p_reqstr;
	var l_mand= new Array();
	l_mand.push('fldRequestId='+p_reqid);
	l_mand.push('fldSessionId='+parent.idsession);
	l_str= l_str+'&'+l_mand.join('&');
	SendAjaxRequestToServer(l_str);
}
//-----------------------------------------------------------------------------
function SendAjaxRequest(
	p_reqstr
,	p_reqid
,	p_resp_handler
,	p_err_handler
,	p_warn_handler
,	p_reset_frame
){
	var l_str = p_reqstr;
	var l_mand= new Array();
	l_mand.push('fldRequestId='+p_reqid);
	l_mand.push('fldSessionId='+parent.idsession);
	l_str= l_str+'&'+l_mand.join('&');
	SendAjaxRequestToServer(l_str,p_resp_handler,p_err_handler,p_warn_handler,p_reset_frame);
}

function SendAjaxRequestLCI(
	p_reqstr
,	p_reqid
,	p_resp_handler
,	p_err_handler
,	p_warn_handler
,	p_reset_frame
){
	var l_str = p_reqstr;
	var l_mand= new Array();
	// l_mand.push('fldRequestId='+p_reqid);
	//l_mand.push('fldSessionId='+parent.idsession);
	l_str= l_str+'&'+l_mand.join('&');
	console.log("l_str---------1--------"+l_str);
	SendAjaxRequestToServer(l_str,p_resp_handler,p_err_handler,p_warn_handler,p_reset_frame);
}
//-----------------------------------------------------------------------------
function SendAjaxRequestToServer(p_reqstr){
	SendAjaxRequestToServer(p_reqstr,null,null,null,false);
}
//-----------------------------------------------------------------------------

function SendAjaxRequestToServer(p_reqstr,p_resp_handler,p_err_handler,p_warn_handler,p_reset_frame){
	var l_req = getXMLHttpRequest();
	var l_url;
	//register the callback handler function
  	var l_callback_handler = getReadyStateHandler(
								l_req
							,	updateMsgOnBrowser
							,	(p_resp_handler != null && p_resp_handler != undefined) ? p_resp_handler: null
							,	(p_err_handler != null && p_err_handler != undefined) ? p_err_handler: null
							,	(p_warn_handler != null && p_warn_handler != undefined) ? p_warn_handler: null
							,	(p_reset_frame != null && p_reset_frame != undefined) ? p_reset_frame: true
							,	 disableDocument()
							);
  	l_req.onreadystatechange = l_callback_handler;
	l_url = location.href;
	if (l_url.indexOf ("#") > 0) {
		l_url = l_url.substring (0, l_url.length - 1);
	}
  	l_req.open("POST", l_url, true);
  	l_req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
	console.log("p_reqstr  ---------  "+p_reqstr);
  	l_req.send(p_reqstr);
}

//-----------------------------------------------------------------------------
function SendAjaxTxnRequest(p_reqstr,p_txn,p_scn){
	SendAjaxRequest(p_reqstr,'RR'+p_txn+p_scn,null,null,null,true);
}
//-----------------------------------------------------------------------------
function SendAjaxTxnRequest(p_reqstr,p_txn,p_scn,p_resp_handler,p_err_handler,p_warn_handler){
	SendAjaxRequest(p_reqstr,'RR'+p_txn+p_scn,p_resp_handler,p_err_handler,p_warn_handler,true)
}
//-----------------------------------------------------------------------------
/**
This is the callback functions that gets called	for the response from the server
with the XML data
**/
function updateMsgOnBrowser(p_xml,p_text,p_resp_handler,p_err_handler,p_warn_handler,p_reset_frame,p_disabled_arr) {
	enableDocument(p_disabled_arr);
	displayAjaxStatusMessage(p_xml,p_reset_frame);
	var errors = p_xml.getElementsByTagName("error");
	var warns = p_xml.getElementsByTagName("warning");
	if(errors.length < 1){
		if(p_resp_handler != null && p_resp_handler != undefined){
			p_resp_handler(p_xml,p_text);
		}else if(updateBrowser != undefined || updateBrowser != null){
			updateBrowser(p_xml,p_text);
		}else{
			alert("Please specify a response handler function implementation.")
		}
	}
	if(errors.length > 0){
		if(p_err_handler != null && p_err_handler != undefined){
			p_err_handler(p_xml,p_text);
		}
	}
	if(warns.length > 0){
		if(p_warn_handler != null && p_warn_handler != undefined){
			p_warn_handler(p_xml,p_text);
		}
	}
}

//------------------------------------------------------------------------------
/**
This is the callback functions used to craete a XMLHTTPRequest
**/
function getXMLHttpRequest() {
	var l_xmlreq = false;
	if (window.XMLHttpRequest) {
		// Firefox, Opera 8.0+, Safari
		l_xmlreq = new XMLHttpRequest();
	} else if (window.ActiveXObject) {
    		// Try ActiveX
		try {
			// Internet Explorer
			l_xmlreq = new ActiveXObject("Msxml2.XMLHTTP");
		} catch (e1) { 
			// first method failed 
			try {
				l_xmlreq = new ActiveXObject("Microsoft.XMLHTTP");
			} catch (e2) {
				 // both methods failed
				 alert("Your browser does not support AJAX!");
			} 
		}
 	}
   	return l_xmlreq;
} 
//------------------------------------------------------------------------------
/**
This is the callback functions used to register a listner callback function
**/
function getReadyStateHandler(p_req, p_resp_xml_Handler,p_resp_handler,p_err_handler,p_warn_handler,p_reset_frame,p_disabled_arr) {
	return function () {
		switch(p_req.readyState){
        case 0: // Uninitialized
            break;
        case 1: // Loading
            break;
        case 2: // Loaded
            break;
        case 3: // Interactive
            break;
        case 4: // Done!
       		 if (p_req.status == 200) {
					p_resp_xml_Handler(getXMLDocument(p_req.responseText),p_req.responseText,p_resp_handler,p_err_handler,p_warn_handler,p_reset_frame,p_disabled_arr);
			} else {
					//alert(p_req.responseText)
			}
            break;
        default:
            break;
        }


 	}
}
//------------------------------------------------------------------------------
function disableDocument() {
	
	var obj = null;
	var tmpObj = null;
	var regObj = null;
	var disableElem=new Array()
	for (l_j=0; l_j < document.forms.length; l_j++ ) {
		for (i=0; i < document.forms[l_j].elements.length; i++ ) {
			if (document.forms[l_j].elements[i].type == 'select-one' 
				|| document.forms[l_j].elements[i].type == 'button' 
				|| document.forms[l_j].elements[i].type == 'checkbox') {
				if(!document.forms[l_j].elements[i].disabled){
					document.forms[l_j].elements[i].disabled=true;
					disableElem.push(document.forms[l_j].elements[i]);
				}
			}
		}
	}
	return disableElem;
}
//------------------------------------------------------------------------------
function enableDocument(p_disabled_arr) {
	for (l_j=0; l_j < p_disabled_arr.length; l_j++ ) {
		try{
			p_disabled_arr[l_j].disabled=false;
		}catch(e){
		}
	}
	return true;
}
//------------------------------------------------------------------------------
function displayAjaxStatusMessage(p_xml,p_reset_frame) {
	
	var arrErrorCode	= new Array();
	var arrErrorDesc	= new Array();
	var arrWarningCode	= new Array();
	var arrWarningDesc	= new Array();
	var arrInfoCode		= new Array();
	var arrInfoDesc		= new Array();
	var arrSuccessCode	= new Array();
	var arrSuccessDesc	= new Array();
	var	l_errors		= p_xml.getElementsByTagName("error");
	for ( var l_i=0; l_i<l_errors.length ;l_i++ ) {
		for ( var l_j=0; l_j<l_errors[l_i].childNodes.length; l_j++ ) {
			if(l_errors[l_i].childNodes[l_j].nodeName == 'code'){
				if(!isIE()) {
					arrErrorCode.push(l_errors[l_i].childNodes[l_j].textContent);
				} else {
					arrErrorCode.push(l_errors[l_i].childNodes[l_j].text);
				}
			}
			if(l_errors[l_i].childNodes[l_j].nodeName == 'description'){
				if(!isIE()) {
					arrErrorDesc.push(l_errors[l_i].childNodes[l_j].textContent);
				} else {
					arrErrorDesc.push(l_errors[l_i].childNodes[l_j].text);
				}
			}							
		}
	}
	var	l_warning		= p_xml.getElementsByTagName("warning");
	for ( var l_i=0; l_i<l_warning.length ;l_i++ ) {
		for ( var l_j=0; l_j<l_warning[l_i].childNodes.length; l_j++ ) {
			if(l_warning[l_i].childNodes[l_j].nodeName == 'code'){
				if(!isIE()) {
					arrWarningCode.push(l_warning[l_i].childNodes[l_j].textContent);
				} else {
					arrWarningCode.push(l_warning[l_i].childNodes[l_j].text);
				}
			}
			if(l_warning[l_i].childNodes[l_j].nodeName == 'description'){
				if(!isIE()) {
					arrWarningDesc.push(l_warning[l_i].childNodes[l_j].textContent);
				} else {
					arrWarningDesc.push(l_warning[l_i].childNodes[l_j].text);
				}
			}							
		}

	}
	var	l_resultmsgs	= p_xml.getElementsByTagName("resultmsg");
	for ( var l_i=0; l_i<l_resultmsgs.length ;l_i++ ) {
		for ( var l_j=0; l_j<l_resultmsgs[l_i].childNodes.length; l_j++ ) {
			if(l_resultmsgs[l_i].childNodes[l_j].nodeName == 'code'){
				if(!isIE()) {
					arrSuccessCode.push(l_resultmsgs[l_i].childNodes[l_j].textContent);
				} else {
					arrSuccessCode.push(l_resultmsgs[l_i].childNodes[l_j].text);
				}
			}
			if(l_resultmsgs[l_i].childNodes[l_j].nodeName == 'description'){
				if(!isIE()) {
					arrSuccessDesc.push(l_resultmsgs[l_i].childNodes[l_j].textContent);
				} else {
					arrSuccessDesc.push(l_resultmsgs[l_i].childNodes[l_j].text);
				}
			}
		}

	}
	var l_totalcnt = eval(arrErrorDesc.length+arrWarningDesc.length+arrInfoDesc.length+arrSuccessDesc.length);
	if(l_totalcnt > 0) {
		window.parent.frames['messageFrame'].displayMessages(arrErrorDesc,arrWarningDesc,arrInfoDesc,arrSuccessDesc);
	} else {
		if(p_reset_frame){
			window.parent.frames['messageFrame'].resetErrors();
		}
		
	}	
}
//------------------------------------------------------------------------------
function displayAjaxWarnMessage(p_errors,p_warns) {
	
	//alert('Please reset your warning');
}
//------------------------------------------------------------------------------
function getXMLDocument(p_text) {
	var xmlDoc = null;
	try{ //Internet Explorer
		xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
		xmlDoc.async="false";
		xmlDoc.loadXML(p_text);
	}catch(e) {
		try{ //Firefox, Mozilla, Opera, etc.
			var parser=new DOMParser();
			xmlDoc=parser.parseFromString(p_text,"text/xml");
		}catch(e) {
			//alert('failed')
		}
	}
	return xmlDoc
}
//------------------------------------------------------------------------------
function isIE(){   											
	if (navigator.appName == 'Microsoft Internet Explorer') {
		return true;
	} else {
		return false;
	}
}
//------------------------------------------------------------------------------